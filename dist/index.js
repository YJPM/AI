let n=!1;async function o(){n||(console.log("初始化打字指示器模块..."),function(){const n="\n        .typing_indicator {\n            position: sticky;\n            bottom: 10px;\n            margin: 10px;\n            opacity: 0.85;\n            text-shadow: 0px 0px calc(var(--shadowWidth) * 1px) var(--SmartThemeShadowColor);\n            order: 9999;\n        }\n        \n        .typing_indicator .svg_dots {\n            display: inline-block;\n            vertical-align: middle;\n            margin-left: 4px;\n        }\n        \n        .typing-ellipsis::after {\n            display: inline-block;\n            animation: ellipsis-animation 1.4s infinite;\n            content: '.';\n            width: 1.2em;\n            text-align: left;\n            vertical-align: bottom;\n        }\n        \n        @keyframes ellipsis-animation {\n            0% { content: '.'; }\n            33% { content: '..'; }\n            66%, 100% { content: '...'; }\n        }\n    ",o=document.createElement("style");o.textContent=n,document.head.appendChild(o)}(),console.log("创建打字指示器设置UI"),console.log("设置打字指示器事件监听器"),n=!0,console.log("打字指示器模块初始化完成"))}async function t(){n&&(console.log("退出打字指示器模块..."),console.log("清理打字指示器事件监听器"),console.log("移除打字指示器UI元素"),n=!1,console.log("打字指示器模块已退出"))}let e=!1;async function i(){e||(console.log("初始化选项生成器模块..."),function(){window.eventSource&&(window.eventSource.on("GENERATION_ENDED",c),window.eventSource.on("CHAT_CHANGED",s));console.log("设置选项生成器事件监听器")}(),e=!0,console.log("选项生成器模块初始化完成"))}async function l(){e&&(console.log("退出选项生成器模块..."),function(){window.eventSource&&(window.eventSource.off("GENERATION_ENDED",c),window.eventSource.off("CHAT_CHANGED",s));console.log("清理选项生成器事件监听器")}(),e=!1,console.log("选项生成器模块已退出"))}function c(){console.log("生成结束，检查是否需要生成选项"),a()&&r()}function s(){console.log("聊天改变，检查是否需要生成选项"),setTimeout(()=>{a()&&null===document.querySelector(".ti-options-container")&&r()},500)}function a(){try{const n=document.querySelector("#chat .last_mes");if(!n)return!1;return"false"===n.getAttribute("is_user")}catch(n){return console.error("检查最后一条消息时出错:",n),!1}}function r(){console.log("开始生成选项...")}let g=!1;async function d(){g||(console.log("初始化设置模块..."),function(){const n={enabled:!0,showCharName:!0,animationEnabled:!0,customText:"正在输入",debug:!1,optionsGenEnabled:!1,optionsApiType:"openai",optionsApiKey:"",optionsApiModel:"gpt-4o-mini",optionsBaseUrl:"https://api.openai.com/v1",optionsTemplate:'\n# 角色\n你是一位拥有顶级创作能力的AI叙事导演。\n\n# 核心目标\n基于完整的聊天上下文，通过一个严谨的内部思考过程，为"我"（用户角色）生成3-5个接下来可能发生的、最具戏剧性的行动或事件选项。\n\n# 当前用户输入\n{{user_input}}\n\n# 角色信息\n{{char_card}}\n\n# 世界设定\n{{world_info}}\n\n# 内部思考过程\n1.  **[情境分析]**: 快速分析当前场景、我的情绪和目标、以及当前的冲突点。\n2.  **[选项构思]**: 基于分析，在内部构思多个多样化的选项（升级冲突、探索未知、反映内心、意外转折等）。\n3.  **[排序与决策]**: 根据戏剧性、角色一致性和叙事推动力，对构思的选项进行排序，将你认为的"最优选项"放在第一位。\n\n# 最终输出格式 (!!!至关重要!!!)\n- 你的最终输出必须是一个不换行的单行文本，包含3-5个高质量选项。\n- **第一个选项必须是你决策出的最优选项。**\n- 每个选项都必须用全角括号【】包裹。\n- **绝对禁止**包含任何序号、JSON、思考过程、解释或其他多余字符。\n\n# 对话上下文\n{{context}}\n\n# 开始执行导演任务，并输出你的最终选项列表：\n'.trim()};window.extension_settings||(window.extension_settings={});window.extension_settings.typing_indicator||(window.extension_settings.typing_indicator=n);console.log("默认设置已初始化")}(),console.log("创建设置UI"),g=!0,console.log("设置模块初始化完成"))}async function p(){g&&(console.log("退出设置模块..."),console.log("清理设置UI"),g=!1,console.log("设置模块已退出"))}async function u(){await o(),await i(),await d(),console.log("AI助手扩展初始化完成")}const w={init:u,exit:async function(){await t(),await l(),await p(),console.log("AI助手扩展已退出")},info:{id:"AI-Assistant",name:"AI助手",description:"为SillyTavern提供打字指示器和智能回复选项生成功能"}};$(async()=>{await u()});export{w as default};
//# sourceMappingURL=index.js.map